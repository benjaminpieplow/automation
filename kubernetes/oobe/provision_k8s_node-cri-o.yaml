# This builds Kubernetes on Docker
# From what I have read, Docker and Podman are mostly interchangeable (I want to learn how wrong that it) and Podman pays more so...

- name: Configure K8s host from OOBE to candidate cluster member
  vars:
    k8s_version: v1.31
    crio_version: v1.30
  hosts: all
  become: yes
  remote_user: root

  tasks:
  - name: Install all pending updates
    tags:
      - oobe
      - update
    # For a clean environment; this will take a HOT second if the host just OOBE'd
    ansible.builtin.apt:
      update-cache: yes
      upgrade: yes

  # Install and Configure Docker (containerd) and CNI network components
  - name: Install CRIO dependencies
    tags:
      - oobe
      - update
    ansible.builtin.apt:
      update_cache: true
      pkg:
        - ca-certificates
        - curl
        - software-properties-common
      state: latest

  # Add cri-o and K8s Repos
  - name: Add k8s Repo & key
    tags:
      - oobe
      - update
    block:
      - name: Add k8s key
        ansible.builtin.get_url:
          url: https://pkgs.k8s.io/core:/stable:/{{ k8s_version }}/deb/Release.key
          dest: /etc/apt/keyrings/kubernetes-apt-keyring.asc

      - name: Add k8s repo
        ansible.builtin.apt_repository:
          repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.asc] https://pkgs.k8s.io/core:/stable:/{{ k8s_version }}/deb /"
          state: present
  
  - name: Add cri-o Repo & key
    tags:
      - oobe
      - update
    block:
      - name: Add cri-o key
        ansible.builtin.get_url:
          url: https://pkgs.k8s.io/addons:/cri-o:/stable:/{{ crio_version }}/deb/Release.key
          dest: /etc/apt/keyrings/cri-o-apt-keyring.asc

      - name: Add cri-o repo
        ansible.builtin.apt_repository:
          repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/cri-o-apt-keyring.asc] https://pkgs.k8s.io/addons:/cri-o:/stable:/{{ crio_version }}/deb /"
          state: present



  # - name: Add Docker GPG key
  #   # Docker is the easiest source for the containerd runtime
  #   tags:
  #     - oobe
  #   ansible.builtin.get_url:
  #     url: https://download.docker.com/linux/ubuntu/gpg
  #     dest: /etc/apt/keyrings/docker.asc
  #     mode: '0644'
  #     force: true

  # - name: Add Docker repo
  #   tags:
  #     - oobe
  #   ansible.builtin.apt_repository:
  #     filename: docker
  #     repo: deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable

  - name: Install/Update cri-o
    tags:
      - oobe
      - update
    ansible.builtin.apt:
      update-cache: yes
      pkg: cri-o
      state: latest

  - name: Enable br_netfilter kernel module
    # Prevents the need for a reboot and *should* make the change persistent
    tags:
      - oobe
    community.general.modprobe:
      name: br_netfilter
      state: present
  
  - name: Manually ensure load-at-boot file exists because modprobe module is broken
    tags:
      - oobe
    ansible.builtin.template:
      dest: /etc/modules-load.d/kubernetes.conf
      force: no
      mode: 0644
      owner: root
      src: module_kubernetes.conf # File only contains br_netfliter, add other drivers here if needed

  #   # NetworkManager must be disabled (note: this should probably happen sooner)
  # - name: Create NetworkManager directory
  #   tags:
  #     - oobe
  #   ansible.builtin.file:
  #     path: /etc/NetworkManager/conf.d
  #     state: directory
  
  - name: Enable packet forwarding
    # More file shoving garbage, this one nukes /etc/sysctl.conf because net.ipv4.ip_forward=1 is commented out
    tags:
      - oobe
    ansible.builtin.template:
      dest: /etc/sysctl.conf
      force: yes  # Will probably break a working config
      mode: 0644
      owner: root
      src: sysctl.conf

  # - name: Disable NetworkManager for Calico's interfaces
  #   tags:
  #     - oobe
  #   ansible.builtin.template:
  #     dest: /etc/NetworkManager/conf.d/calico.conf
  #     force: no
  #     mode: 0644
  #     owner: root
  #     src: calico.conf # File only contains br_netfliter, add other drivers here if needed

  # - name: Reset containerd configuration to "default"
  #   # More file shoving garbage, this one nukes Docker's containerd config (is how I understand it)
  #   tags:
  #     - oobe
  #   ansible.builtin.template:
  #     dest: /etc/containerd/config.toml
  #     force: yes  # Will probably break a working config
  #     mode: 0644
  #     owner: root
  #     src: containerd_config_default.conf # Created 2023-05-28; set "SystemdCgroup = true"
  
  # # Install Kubernetes
  # - name: Add Kubernetes APT repository
  #   tags:
  #     - oobe
  #   ansible.builtin.deb822_repository:
  #     name: kubernetes
  #     types: [deb]
  #     uris: "https://pkgs.k8s.io/core:/stable:/{{ k8s_version }}/deb/"
  #     signed_by: "https://pkgs.k8s.io/core:/stable:/{{ k8s_version }}/deb/Release.key"
  #     suites: [/]
  #     state: present
  #     enabled: yes










  - name: Install/Update Kubernetes
    tags:
      - oobe
      - update
    ansible.builtin.apt:
      update-cache: yes
      pkg:
        - kubelet
        - kubeadm
        - kubectl
      state: latest

  - name: Reboot host
    tags:
      - oobe
      - update
    ansible.builtin.reboot: